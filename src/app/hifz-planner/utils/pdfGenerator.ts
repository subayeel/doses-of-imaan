import { jsPDF } from "jspdf";
import html2canvas from "html2canvas";
import type { HifzPlanData, HifzPlanResult } from "@/utils/types";

/**
 * Generates a PDF document from an HTML element containing the plan.
 *
 * @param element - The HTMLDivElement containing the content to capture.
 * @param planData - The user's input data (optional, for adding details).
 * @param generatedPlan - The generated plan results (optional, for adding details).
 * @param filename - The desired name for the downloaded PDF file.
 */
export async function generatePdf(
  element: HTMLElement,
  planData: HifzPlanData | null, // Made nullable
  generatedPlan: HifzPlanResult | null, // Made nullable
  filename: string = "hifz-plan.pdf"
): Promise<void> {
  if (!element) {
    console.error("PDF Generation Error: Provided element is null.");
    throw new Error("Target element for PDF generation not found.");
  }

  try {
    // --- Capture HTML as Canvas ---
    // Increase scale for better resolution in PDF
    const scale = 2;
    const canvas = await html2canvas(element, {
      scale: scale,
      useCORS: true, // If images from other domains are used
      logging: false, // Reduce console noise
      backgroundColor: "#ffffff", // Ensure a white background
    });

    const imgData = canvas.toDataURL("image/png");
    const imgWidth = canvas.width / scale; // Use scaled dimensions for PDF placement
    const imgHeight = canvas.height / scale;

    // --- Create PDF Document ---
    // Use A4 dimensions in 'pt' (points) for commonality

    const orientation = imgWidth > imgHeight ? "l" : "p"; // 'landscape' or 'portrait'
    const pdf = new jsPDF({
      orientation: orientation,
      unit: "pt",
      format: "a4",
    });

    const pdfPageWidth = pdf.internal.pageSize.getWidth();
    const pdfPageHeight = pdf.internal.pageSize.getHeight();

    // Calculate image placement dimensions maintaining aspect ratio
    const margin = 40; // points
    const availableWidth = pdfPageWidth - 2 * margin;
    const availableHeight = pdfPageHeight - 2 * margin;

    let pdfImgWidth, pdfImgHeight;
    const aspectRatio = imgWidth / imgHeight;

    if (imgWidth > availableWidth) {
      pdfImgWidth = availableWidth;
      pdfImgHeight = pdfImgWidth / aspectRatio;
    } else {
      pdfImgWidth = imgWidth;
      pdfImgHeight = imgHeight;
    }

    if (pdfImgHeight > availableHeight) {
      pdfImgHeight = availableHeight;
      pdfImgWidth = pdfImgHeight * aspectRatio;
    }

    // Center the image
    const x = (pdfPageWidth - pdfImgWidth) / 2;
    const y = margin; // Place image starting from top margin

    // --- Add Content to PDF ---
    // Add a Title (Optional but recommended)
    pdf.setFontSize(18);
    pdf.setFont("helvetica", "bold");
    pdf.text("Your Personalized Hifz Plan", pdfPageWidth / 2, margin / 1.5, {
      align: "center",
    });

    // Add the captured image
    pdf.addImage(imgData, "PNG", x, y, pdfImgWidth, pdfImgHeight);

    // Add Footer (Optional)
    pdf.setFontSize(8);
    pdf.setFont("helvetica", "normal");
    pdf.setTextColor(150);
    const todayStr = new Date().toLocaleDateString("en-US");
    pdf.text(`Generated on: ${todayStr}`, margin, pdfPageHeight - margin / 2, {
      align: "left",
    });
    // Add your app name or URL if desired
    // pdf.text("Generated by Hifz Planner App", pdfPageWidth - margin, pdfPageHeight - margin/2, { align: 'right' });

    // --- Save PDF ---
    pdf.save(filename);
  } catch (error) {
    console.error("Error generating PDF:", error);
    throw new Error("Failed to generate PDF. Please try again."); // Throw error for calling function to handle
  }
}
