import type { Metadata } from "next";
import { GeistSans, GeistMono } from "geist/font";
import { cn } from "@/lib/utils";
import "./globals.css";
import Image from "next/image";
import {
  SidebarProvider,
  Sidebar,
  SidebarContent,
  SidebarMenu,
  SidebarMenuItem,
  SidebarMenuButton,
  SidebarGroup,
  SidebarGroupLabel,
  SidebarGroupContent,
  SidebarHeader,
  SidebarFooter,
} from "@/components/ui/sidebar";
import {
  Dot,
  Book,
  Tally1,
  User,
  HandHeart,
  TreePalm,
  Leaf,
  ChartNoAxesCombined,
  ShieldCheck,
  Egg,
  Sparkle,
  Settings,
  ChevronUp,
} from "lucide-react";
import {
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from "@/components/ui/dropdown-menu";
import { ThemeProvider } from "next-themes";
import { ModeToggle } from "@/components/mode-toggle";

export const metadata: Metadata = {
  title: "Doses of Imaan",
  description: "Generated by create next app",
  keywords: "dosesofislam,dosesofimaan,Islam,Imaan,Ihsaan",
};

// Define the sidebar content as a separate component
const SidebarComponent = () => {
  // const { setTheme } = useTheme();
  // Menu items.
  const primaryDose = [
    {
      title: "Godâ€™s Existence",
      url: "#",
      icon: Dot,
    },
    {
      title: "Oneness of God",
      url: "#",
      icon: Tally1,
    },
    {
      title: "Revelation from God",
      url: "#",
      icon: Book,
    },
    {
      title: "Prophethood",
      url: "#",
      icon: User,
    },
  ];

  const religionDose = [
    {
      title: "Islam",
      url: "#",
      icon: TreePalm,
    },
    {
      title: "Ihsaan",
      url: "#",
      icon: HandHeart,
    },
    {
      title: "Imaan",
      url: "#",
      icon: Leaf,
    },
  ];

  const selfHelp = [
    {
      title: "Diagnose your Imaan",
      url: "#",
      icon: ShieldCheck,
    },
    {
      title: "Quick Recovery of Imaan",
      url: "#",
      icon: ChartNoAxesCombined,
    },
    {
      title: "Learn Salah",
      url: "#",
      icon: Egg,
    },
    {
      title: "Learn Quran",
      url: "#",
      icon: Book,
    },
    {
      title: "Learn Arabic",
      url: "#",
      icon: Sparkle,
    },
  ];
  return (
    <Sidebar>
      <SidebarHeader>
        <SidebarMenu>
          <SidebarMenuItem className="flex gap-4 items-center">
            <Image
              src="/logo.png"
              alt="Brand logo"
              width={32}
              height={32}
              className="object-contain"
            />{" "}
            <div className="text-core flex flex-col font-semibold text-lg leading-3">
              <span className="tracking-wide text-lg m-0">Doses of Imaan</span>
            </div>
            <ModeToggle />
          </SidebarMenuItem>
        </SidebarMenu>
      </SidebarHeader>
      <SidebarContent>
        <SidebarGroup>
          <SidebarGroupLabel>Primary Dose</SidebarGroupLabel>
          <SidebarGroupContent>
            <SidebarMenu>
              {primaryDose.map((item) => (
                <SidebarMenuItem key={item.title}>
                  <SidebarMenuButton asChild>
                    <a href={item.url}>
                      <item.icon />
                      <span>{item.title}</span>
                    </a>
                  </SidebarMenuButton>
                </SidebarMenuItem>
              ))}
            </SidebarMenu>
          </SidebarGroupContent>
        </SidebarGroup>
        <SidebarGroup>
          <SidebarGroupLabel>Religion Dose</SidebarGroupLabel>
          <SidebarGroupContent>
            <SidebarMenu>
              {religionDose.map((item) => (
                <SidebarMenuItem key={item.title}>
                  <SidebarMenuButton asChild>
                    <a href={item.url}>
                      <item.icon />
                      <span>{item.title}</span>
                    </a>
                  </SidebarMenuButton>
                </SidebarMenuItem>
              ))}
            </SidebarMenu>
          </SidebarGroupContent>
        </SidebarGroup>

        <SidebarGroup>
          <SidebarGroupLabel>Self-Help</SidebarGroupLabel>
          <SidebarGroupContent>
            <SidebarMenu>
              {selfHelp.map((item) => (
                <SidebarMenuItem key={item.title}>
                  <SidebarMenuButton asChild>
                    <a href={item.url}>
                      <item.icon />
                      <span>{item.title}</span>
                    </a>
                  </SidebarMenuButton>
                </SidebarMenuItem>
              ))}
            </SidebarMenu>
          </SidebarGroupContent>
        </SidebarGroup>
      </SidebarContent>
      <SidebarFooter>
        <SidebarMenu>
          <SidebarMenuItem>
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <SidebarMenuButton>
                  <Settings /> Settings
                  <ChevronUp className="ml-auto" />
                </SidebarMenuButton>
              </DropdownMenuTrigger>
              <DropdownMenuContent
                side="top"
                className="w-[--radix-popper-anchor-width]"
              >
                <DropdownMenuItem>
                  <span>Privacy & Policy</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <span>About Us</span>
                </DropdownMenuItem>
                <DropdownMenuItem>
                  <span>Contact Us</span>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          </SidebarMenuItem>
        </SidebarMenu>
      </SidebarFooter>
    </Sidebar>
  );
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html
      lang="en"
      className={cn(GeistSans.variable, GeistMono.variable)}
      suppressHydrationWarning
    >
      <head>
        <link rel="icon" type="image/x-icon" href="favicon.ico" />
      </head>
      <ThemeProvider
        attribute="class"
        defaultTheme="system"
        enableSystem
        disableTransitionOnChange
      >
        <body className="flex flex-col min-h-screen bg-background font-sans antialiased">
          <SidebarProvider defaultOpen={true}>
            <SidebarComponent />
            {/* <SidebarTrigger className="ml-2 aspect-square" /> */}
            <main className="container">{children}</main>
          </SidebarProvider>
        </body>
      </ThemeProvider>
    </html>
  );
}
